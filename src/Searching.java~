import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.RandomAccessFile;
import java.util.Arrays;
import java.util.List;

public class Searching {
	public static String share = "Hello World! ";
	public static void main(String args[]){
		while(true){
			System.out.println("Enter your query");
			try{
				 BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
				 StringBuffer queryStrings = new StringBuffer();
				 StringBuffer sb = new StringBuffer();
				 char ch [] = br.readLine().toCharArray();
				 int length = ch.length;
				 for (int i = 0; i <length; i++) {
					 //System.out.print(ch[i]);
						ch[i] = Character.toLowerCase(ch[i]);
						if (ch[i] >= 'a' && ch[i] <= 'z') {
							sb.append(ch[i]);
							//System.out.println(sb.toString()+" "+sb.length());
						}
						else
						{
							if(sb.length()>0)
							{
								//System.out.println(sb.toString());
								stemmer stem = new stemmer();
								//String token;
								stem.add(sb.toString().toCharArray(), sb.length());
								stem.stem();
								queryStrings.append(stem.toString()+" ");
								sb.setLength(0);
								//System.out.println("now"+sb.toString());
							}
						}
					}
				 if(sb.length()>0)
					{
						//System.out.println(sb.toString());
						stemmer stem = new stemmer();
						//String token;
						stem.add(sb.toString().toCharArray(), sb.length());
						stem.stem();
						queryStrings.append(stem.toString()+" ");
						sb.setLength(0);
						//System.out.println("now"+sb.toString());
					}
				 System.out.println(queryStrings.toString());
				 SearchEngine(queryStrings);
				/* File file = new File("/home/user/Desktop/sem2/IRE/final/src/results/secInd.txt");
				 FileInputStream fis = new FileInputStream(file);
				 BufferedReader fr = new BufferedReader(new InputStreamReader(fis));
				 String str;
				 while((str = fr.readLine())!=null)
				 {
					 List<String> list =  Arrays.asList(str.split("-"));
					 if(list.get(0).compareTo(query)>=0)
					 {
						 break;
					 }
				 }*/
			 
			 }
			 catch(Exception e){
				 
			 }
		}
	}
	
	public static void SearchEngine(StringBuffer queryStrings){
		 List<String> queryTerms =  Arrays.asList(queryStrings.toString().split(" "));
		 for(String str :queryTerms){
			 try{
				 	Runnable r = new StrThread(str);
				    new Thread(r).start(); 
				}	 
			 catch(Exception e){
				 
			 }
		 }
	}
}
